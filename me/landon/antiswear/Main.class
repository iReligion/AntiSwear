// Imports
package me.landon.antiswear;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.plugin.java.JavaPlugin;
import java.util.List;

// Code
public class Main extends JavaPlugin implements Listener {

    // Plugin Enable
    @Override
    public void onEnable() {
        System.out.println("[AntiSwear] Running version 1.0.");

        this.getConfig().options().copyDefaults();
        saveDefaultConfig();

        Bukkit.getPluginManager().registerEvents(this, this);
    }

    // Blacklist
    List<String> blacklistarray = this.getConfig().getStringList("blacklist");

    // Replace Swear Words
    @EventHandler
    public void antiswear(AsyncPlayerChatEvent e) {
        Player player = e.getPlayer();
        String censor = getConfig().getString("censor");
        for (String blacklist : blacklistarray) {
            if (e.getMessage().toLowerCase().contains(blacklist.toLowerCase())) {
                if (player.hasPermission("antiswear.bypass")) return;
                String message = e.getMessage().toLowerCase().replace(blacklist.toLowerCase(), censor);
                e.setMessage(message);
                player.playSound(player.getLocation(), Sound.ITEM_PICKUP, 3.0F, 0.5F);
            }
        }
    }

    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (!(sender instanceof Player)) {
            this.reloadConfig();
            this.saveConfig();
            sender.sendMessage(ChatColor.GREEN + "AntiSwear configuration file reloaded.");
            return true;
        }

        Player player = (Player) sender;

        if (!player.hasPermission("antiswear.admin")) {
            player.sendMessage(ChatColor.RED + "You don't have permission to use AntiSwear.");
            return true;
        }

        if (!cmd.getName().equalsIgnoreCase("antiswear")) return true;
        int argumentCount = args.length;

        switch (argumentCount) {
            case 0:
                player.sendMessage(ChatColor.GREEN + "§m----------" + ChatColor.GRAY + "[" + "AntiSwear" + ChatColor.GRAY + "]" + ChatColor.GREEN + "§m----------");
                player.sendMessage("");
                player.sendMessage(ChatColor.GREEN + "/antiswear - Access all commands.");
                player.sendMessage(ChatColor.GREEN + "/antiswear reload - Reload the config.");
                player.sendMessage(ChatColor.GREEN + "/antiswear <add/remove> <word> - Add or remove a word.");
                player.sendMessage("");
                player.sendMessage(ChatColor.GREEN + "§m----------" + ChatColor.GRAY + "[" + "AntiSwear" + ChatColor.GRAY + "]" + ChatColor.GREEN + "§m----------");
                break;
            case 1:
                String firstArg1 = args[0].toLowerCase();
                if (firstArg1.equals("reload")) {
                    this.reloadConfig();
                    this.saveConfig();
                    player.sendMessage(ChatColor.GREEN + "AntiSwear configuration file reloaded.");
                } else if (firstArg1.equals("add")) {
                    player.sendMessage(ChatColor.GRAY + "Correct Usage: /antiswear add <word>");
                } else if (firstArg1.equals("remove")) {
                    player.sendMessage(ChatColor.GRAY + "Correct Usage: /antiswear remove <word>");
                }
                break;
            case 2:
                String firstArg2 = args[0].toLowerCase();
                String secondArg2 = args[1].toLowerCase();
                if (firstArg2.equals("add")) {
                    player.sendMessage(ChatColor.GREEN + args[1] + " added to blacklist.");
                    blacklistarray.add(args[1]);
                    this.getConfig().set("blacklist", blacklistarray);
                    this.saveConfig();
                    this.reloadConfig();
                } else if (firstArg2.equals("remove")) {
                    player.sendMessage(ChatColor.RED + args[1] + " removed from the blacklist.");
                    blacklistarray.remove(args[1]);
                    this.getConfig().set("blacklist", blacklistarray);
                    this.saveConfig();
                    this.reloadConfig();
                }
                break;
            default:
                player.sendMessage(ChatColor.GREEN + "§m----------" + ChatColor.GRAY + "[" + "AntiSwear" + ChatColor.GRAY + "]" + ChatColor.GREEN + "§m----------");
                player.sendMessage("");
                player.sendMessage(ChatColor.GREEN + "/antiswear - Access all commands.");
                player.sendMessage(ChatColor.GREEN + "/antiswear reload - Reload the config.");
                player.sendMessage(ChatColor.GREEN + "/antiswear <add/remove> <word> - Add or remove a word.");
                player.sendMessage("");
                player.sendMessage(ChatColor.GREEN + "§m----------" + ChatColor.GRAY + "[" + "AntiSwear" + ChatColor.GRAY + "]" + ChatColor.GREEN + "§m----------");
                break;
        }
        return true;
    }

}
